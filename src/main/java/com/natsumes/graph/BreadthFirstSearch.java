package com.natsumes.graph;

/**
 * 广度优先搜索
 *
 * 直观地讲，它其实就是一种“地毯式”层层推进的搜索策略，即先查找离起始顶点最近的，然后是次近
 * 的，依次往外搜索。
 *
 * 广度优先搜索，一般用来解决最短路径的问题。
 *
 * 时间复杂度
 * 邻接表
 * 每个顶点都需要被访问一次，时间复杂度是 O(V)；相连的顶点（也就是每条边）也都要被访问一次，加
 * 起来就是 O(E)。因此整体时间复杂度就是 O(V+E)。
 * 邻接矩阵
 * V 个顶点，每次都要检查每个顶点与其他顶点是否有联系，因此时间复杂度是 O( )。
 * 应用
 * 广度优先的搜索可以同时从起始点和终点开始进行，称之为双端 BFS。这种算法往往可以大大地提高搜
 * 索的效率。
 *
 * 社交网络可以用图来表示。这个问题就非常适合用图的广度优先搜索算法来解决，因为广度优先搜索是
 * 层层往外推进的。首先，遍历与起始顶点最近的一层顶点，也就是用户的一度好友，然后再遍历与用户
 * 距离的边数为 2 的顶点，也就是二度好友关系，以及与用户距离的边数为 3 的顶点，也就是三度好友关
 * 系。
 *
 * @author hetengjiao
 */
public class BreadthFirstSearch {
}
